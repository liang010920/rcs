<template>
    <section class="member-manage wrap-container">
        <el-form :inline="true" size="small">
            <!-- <el-button type="text" size="small" @click="fixedMenu">固定菜单</el-button> -->
            <el-form-item label="接入号">
                <el-input clearable v-model="params.userId" placeholder="输入接入号搜索"></el-input>
            </el-form-item>
            <el-form-item label="机器人名称">
                <el-input clearable v-model="params.chatbotName" placeholder="输入机器人名称搜索"></el-input>
            </el-form-item>
            <el-form-item>
                <el-button type="primary" @click="search" icon="el-icon-search">查询</el-button>
                <el-button type="primary"
                    @click="dialogVisible = true;dialogTitle='新增机器人';channelModel={apiVersion:'v1'};">新增机器人</el-button>
            </el-form-item>
        </el-form>

        <section class="data-main">
            <div class="left">
                <el-table :data="channelList" fit v-loading="tableLoading" size="small" border
                    :header-cell-style="{'background-color': '#fafafa'}">
                    <el-table-column prop="userId" label="接入号" align="center"></el-table-column>
                    <el-table-column prop="chatbotName" label="机器人名称" align="center"></el-table-column>
                    <el-table-column prop="appId" label="应用id" align="center"></el-table-column>
                    <el-table-column prop="chatbotUpCheck" label="信息状态" align="center">
                        <template slot-scope="scope">
                            <div v-if="scope.row.chatbotUpCheck == 0">待审核</div>
                            <div v-if="scope.row.chatbotUpCheck == 1">审核成功</div>
                            <div v-if="scope.row.chatbotUpCheck == 2">审核失败</div>
                            <div v-if="scope.row.chatbotUpCheck == 3">审核中</div>
                        </template>
                    </el-table-column>
                    <el-table-column prop="chatbotType" label="通道类型" align="center">
                        <template slot-scope="scope">
                            <div v-for="(item,index) in chotbotType" :key="'chatbot'+index"
                                v-if="item.id == scope.row.chatbotType">{{item.name}}</div>
                        </template>
                    </el-table-column>
                    <el-table-column prop="menuStatus" label="菜单状态" align="center">
                        <template slot-scope="scope">
                            <div v-if="scope.row.menuStatus == 0">待审核</div>
                            <div v-if="scope.row.menuStatus == 1">审核成功</div>
                            <div v-if="scope.row.menuStatus == 2">审核失败</div>
                            <div v-if="scope.row.menuStatus == 3">审核中</div>
                        </template>
                    </el-table-column>
                    <!-- 操作区 -->
                    <el-table-column label="操作" align="center" width="230">
                        <template slot-scope="scope">
                            <el-button type="text" size="small" @click="fixedMenu(scope.row)">固定菜单</el-button>
                            <el-button type="text" size="small" @click="toDetail(scope.row)">编辑</el-button>
                            <el-button type="text" size="small" @click="deleteChannel(scope.row)">删除</el-button>
                            <el-button type="text" size="small" @click="extensionInfo(scope.row,'edit')">编辑详细信息
                            </el-button>
                            <el-button type="text" size="small" @click="extensionInfo(scope.row,'query')">详细信息
                            </el-button>
                        </template>
                    </el-table-column>
                </el-table>
            </div>
        </section>

        <!-- 页码区 -->
        <div class="page-wrap">
            <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange"
                :current-page="page.curPage" :page-sizes="[10, 15, 20, 30]" :page-size="page.size"
                layout="total, sizes, prev, pager, next, jumper" :total="page.total">
            </el-pagination>
        </div>



        <!-- 新增编辑 start -->
        <el-dialog class="query-detail-dialog" :title="dialogTitle" :visible.sync="dialogVisible" width="600px" center
            :close-on-click-modal="false">
            <el-form label-width="150px" size="mini" :model="channelModel" :rules="rules" ref="chatbotForm">
                <el-form-item label="机器人名称" prop="chatbotName">
                    <el-input v-model="channelModel.chatbotName" placeholder="请输入机器人名称" maxlength="128"></el-input>
                </el-form-item>
                <el-form-item label="接入号" prop="userId">
                    <el-input v-model="channelModel.userId" placeholder="请输入接入号" maxlength="128"></el-input>
                </el-form-item>
                <el-form-item label="应用id" prop="appId">
                    <el-input v-model="channelModel.appId" placeholder="请输入应用id" maxlength="128"></el-input>
                </el-form-item>
                <el-form-item label="密码" prop="appSecret">
                    <el-input v-model="channelModel.appSecret" placeholder="请输入密码" maxlength="128"></el-input>
                </el-form-item>
                <el-form-item label="api版本号" prop="apiVersion">
                    <el-input v-model="channelModel.apiVersion" placeholder="请输入api版本号" maxlength="128"></el-input>
                </el-form-item>
                <el-form-item label="服务器域名(IP)端口" prop="serverRoot">
                    <el-input v-model="channelModel.serverRoot" placeholder="请输入域名服务器域名(IP)端口" maxlength="128">
                    </el-input>
                </el-form-item>
                <el-form-item label="通道类型" prop="chatbotType">
                    <el-select v-model="channelModel.chatbotType" placeholder="请选择通道类型">
                        <el-option v-for="(item,index) in chotbotType" :key="'chatbotType'+index" :label="item.name"
                            :value="item.id"></el-option>
                    </el-select>
                </el-form-item>
                <!-- <el-form-item label="运营商类型" prop="carrier">
                    <el-select v-model="channelModel.carrier" placeholder="请选择运营商类型">
                        <el-option v-for="(item,index) in carrierList" :key="'carrier'+index" :label="item.name"
                            :value="item.id"></el-option>
                    </el-select>
                </el-form-item> -->
                <div v-if="carrierType == 2">
                    <el-form-item label="csp编码" prop="cspId">
                        <el-input v-model="channelModel.cspId" placeholder="请输入csp编码" maxlength="128"></el-input>
                    </el-form-item>
                    <el-form-item label="cspToken" prop="cspToken">
                        <el-input v-model="channelModel.cspToken" placeholder="请输入cspToken" maxlength="128"></el-input>
                    </el-form-item>
                </div>
                <div v-else-if="carrierType == 5">
                    <el-form-item label="联通随机码" prop="ltToken">
                        <el-input v-model="channelModel.ltToken" placeholder="请输入联通随机码" maxlength="128"></el-input>
                    </el-form-item>
                </div>
                <el-form-item>
                    <el-button @click="dialogVisible = false" size="small">取 消</el-button>
                    <el-button type="primary" size="small" @click="saveChatbot">确 定</el-button>
                </el-form-item>
            </el-form>
            <!-- <span slot="footer" class="dialog-footer">
                <el-button @click="dialogVisible = false" size="small">取 消</el-button>
                <el-button type="primary" size="small" @click="saveChatbot">确 定</el-button>
            </span> -->
        </el-dialog>
        <!-- 新增编辑 end -->

        <!-- 固定菜单 start -->
        <el-dialog class="query-detail-dialog" title="固定菜单" :visible.sync="fixedMenuBool" width="70%" center
            :close-on-click-modal="false">
            <el-form :model="editMenuForm" :rules="editMenuFules" ref="ruleForm" label-width="90px"
                class="demo-ruleForm">
                <el-row v-if="fixedMenuBool">
                    <el-col :span="12" align="center">
                        <div>
                            <section class="preview-resource">
                                <div class="preview">
                                    <div class="mobile-header"></div>
                                    <div class="mobile-main scrollbar">
                                        <div style="height: 398px;"></div>
                                        <div class="box">
                                            <div><img src="../../../static/imgs/keyboard.png" style="width: 20px;">
                                            </div>
                                            <div v-for="(item,index) in addMenuList" :key="index" class="addMenu">
                                                <div :title="item.displayText" class="menuOverflow"
                                                    @click="menuClickInfo(item,index)">{{item.displayText}}</div>
                                                <div class="childrenMenu" :style="{top:item.childrenMenuHeight+'px'}"
                                                    v-show="index == relationIndex">
                                                    <div v-for="(item2,index2) in item.childrenAddMenuList"
                                                        :key="item2.index2">
                                                        <div :title="item2.displayText"
                                                            @click="childrenMenuClickInfo(item,item2)">
                                                            {{item2.displayText}}
                                                        </div>
                                                    </div>
                                                    <div v-if="item.childrenAddMenuList.length < 5"
                                                        @click="childrenAddMenuClick(index)">+添加子菜单</div>
                                                </div>
                                            </div>
                                            <div v-if="addMenuList.length < 3" @click="addMenuClick">+添加菜单</div>
                                        </div>
                                    </div>
                                    <div class="mobile-footer"></div>
                                </div>
                            </section>
                        </div>
                    </el-col>

                    <el-col :span="12" align="center" v-if="editContentBool==false">请选择菜单进行修改</el-col>
                    <el-col :span="12" align="center" v-if="editContentBool==true">
                        <div class="editMenu">
                            <el-row class="newMenu">
                                <el-col :span="12">新建菜单</el-col>
                                <el-col :span="12" align="right">
                                    <div @click="delMenu" style="color:#269relationIndex;cursor: pointer;">删除菜单</div>
                                </el-col>
                            </el-row>
                            <el-row v-if="MenuNameBool == 'parent'">
                                <el-col :span="5" align="right" class="menuLineHeight"><span style="color:red;">*
                                    </span>菜单名称：</el-col>
                                <el-col :span="19">
                                    <el-input v-model="editMenuForm.displayText" maxlength='12' @change="menuNameBlur"
                                        placeholder="请输入菜单名称"></el-input>
                                </el-col>
                            </el-row>
                            <el-row v-else>
                                <el-col :span="5" align="right" class="menuLineHeight"><span style="color:red;">*
                                    </span>子菜单名称：</el-col>
                                <el-col :span="19">
                                    <el-input v-model="editMenuForm.displayText" maxlength='12'
                                        @change="childrenMenuNameBlur" placeholder="请输入菜单名称"></el-input>
                                </el-col>
                            </el-row>
                            <el-row>
                                <el-col :span="19" :offset='5' style="color:#C5C5C5">名称由中英文、数字组成，字数不超过12字符</el-col>
                            </el-row>
                            <el-row v-if="menuContentBool">
                                <el-col :span="5" align="right" class="menuLineHeight"><span style="color:red;">*
                                    </span>菜单内容：</el-col>
                                <el-col :span="19">
                                    <template>

                                        <el-tabs v-model="editMenuForm.menuType" @tab-click="handleClick">
                                            <el-tab-pane label="关键词" name="N1">
                                                <!-- <el-row>
                                                    <el-col :span="24">
                                                        <el-input maxlength="30" @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()"
                                                            v-model="editMenuForm.menuContent" placeholder="新建关键词"></el-input>
                                                    </el-col>
                                                </el-row> -->
                                            </el-tab-pane>
                                            <el-tab-pane label="打开URL" name="N2">
                                                <!-- <el-row>
                                                    <el-col :span="24">
                                                        <el-input maxlength="1500" @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()"
                                                            v-model="editMenuForm.menuContent" placeholder="请输入URL链接"></el-input>
                                                    </el-col>
                                                </el-row> -->
                                            </el-tab-pane>
                                            <el-tab-pane label="拔打电话" name="N3">
                                                <!-- <el-row>
                                                    <el-col :span="24">
                                                        <el-input maxlength="30" @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()"
                                                            v-model="editMenuForm.menuContent" placeholder="请输入号码"></el-input>
                                                    </el-col>
                                                </el-row> -->
                                            </el-tab-pane>
                                            <el-tab-pane label="视频电话" name="N4"></el-tab-pane>
                                            <el-tab-pane label="地图" name="N5"></el-tab-pane>
                                            <el-tab-pane label="请求位置推送" name="N6"></el-tab-pane>
                                            <el-tab-pane label="日历" name="N7"></el-tab-pane>
                                            <el-tab-pane label="发送文本消息" name="N8"></el-tab-pane>
                                            <el-tab-pane label="录制音视频" name="N9"></el-tab-pane>
                                            <el-tab-pane label="共享设备信息" name="N10"></el-tab-pane>
                                        </el-tabs>
                                        <div>
                                            <el-form-item label="返回数据" prop="data">
                                                <el-input v-model="editMenuForm.data" placeholder="请输入返回数据"
                                                    maxlength="25" show-word-limit
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>

                                            <!-- url配置 -->
                                            <el-form-item label="URL地址" prop="url" v-if="editMenuForm.menuType == 'N2'">
                                                <el-input v-model="editMenuForm.url" placeholder="请输入URL地址"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>

                                            <!-- 电话 -->
                                            <el-form-item label="联系方式" prop="phoneNumber"
                                                v-if="editMenuForm.menuType == 'N3' || editMenuForm.menuType == 'N4' || editMenuForm.menuType == 'N8' || editMenuForm.menuType == 'N9'">
                                                <el-input v-model="editMenuForm.phoneNumber" placeholder="请输入联系方式"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>

                                            <!-- 视频电话 -->

                                            <!-- 地图 -->
                                            <el-form-item label="纬度" prop="latitude"
                                                v-if="editMenuForm.menuType == 'N5'">
                                                <el-input v-model="editMenuForm.latitude" placeholder="请输入纬度"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>
                                            <el-form-item label="经度" prop="longitude"
                                                v-if="editMenuForm.menuType == 'N5'">
                                                <el-input v-model="editMenuForm.longitude" placeholder="请输入经度"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>
                                            <el-form-item label="查询" prop="query" v-if="editMenuForm.menuType == 'N5'">
                                                <el-input v-model="editMenuForm.query" placeholder="请输入查询"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>
                                            <el-form-item label="标签" prop="label" v-if="editMenuForm.menuType == 'N5'">
                                                <el-input v-model="editMenuForm.label" placeholder="请输入标签"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>

                                            <!-- 请求位置推送 -->
                                            <el-form-item label="请求位置推送" prop="requestLocationPush"
                                                v-if="editMenuForm.menuType == 'N6'">
                                                <el-input v-model="editMenuForm.requestLocationPush"
                                                    placeholder="请输入请求位置推送"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>

                                            <!--日历 -->
                                            <el-form-item label="时间" prop="dateTime"
                                                v-if="editMenuForm.menuType == 'N7'">
                                                <el-date-picker v-model="editMenuForm.dateTime" type="datetimerange"
                                                    range-separator="至" value-format="yyyy-MM-dd HH:mm:ss"
                                                    start-placeholder="开始日期" end-placeholder="结束日期"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-date-picker>
                                            </el-form-item>
                                            <el-form-item label="主题" prop="title" v-if="editMenuForm.menuType == 'N7'">
                                                <el-input v-model="editMenuForm.title" placeholder="请输入主题"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>
                                            <el-form-item label="描述" prop="description"
                                                v-if="editMenuForm.menuType == 'N7'">
                                                <el-input v-model="editMenuForm.description" placeholder="请输入描述"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>

                                            <!-- 终端向特定对象发送文本消息 -->
                                            <el-form-item label="文本" prop="text" v-if="editMenuForm.menuType == 'N8'">
                                                <el-input v-model="editMenuForm.text" placeholder="请输入文本"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>

                                            <!-- 终端录制音视频并发送给特定对象 -->
                                            <el-form-item label="电话类型" prop="phoneType"
                                                v-if="editMenuForm.menuType == 'N9'">
                                                <el-input v-model="editMenuForm.phoneType" placeholder="请输入电话类型"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>

                                            <!-- 终端录制音视频并发送给特定对象 -->
                                            <el-form-item label="共享设备" prop="enableDisplayedNotifications"
                                                v-if="editMenuForm.menuType == 'N10'">
                                                <el-input v-model="editMenuForm.enableDisplayedNotifications"
                                                    placeholder="请输入共享设备"
                                                    @change="MenuNameBool == 'parent' ? menuNameBlur() : childrenMenuNameBlur()">
                                                </el-input>
                                            </el-form-item>
                                        </div>

                                    </template>
                                </el-col>
                            </el-row>
                        </div>
                    </el-col>
                </el-row>
                <div class="dialog-footer" style="margin-top: 10px;" align="center">
                    <el-button @click="fixedMenuBool = false" size="small">取 消</el-button>
                    <el-button type="primary" size="small" @click="submitToExamine">保存</el-button>
                    <!-- <el-button type="primary" v-if="addMenuList.length > 0" @click="copyMenu" v-clipboard:copy="copyMenuJson"
                        v-clipboard:success="onCopy" v-clipboard:error="onError" size="small">复制菜单内容</el-button> -->
                </div>
            </el-form>
        </el-dialog>
        <!-- 固定菜单 end -->

        <!-- 详细信息 start -->
        <el-dialog class="extensionInfo" :title="extensionTitle" :visible.sync="extensionVisible" width="600px" center
            :close-on-click-modal="false">
            <el-form label-width="150px" size="mini" :model="extension" ref="extensionForm">
                <el-form-item label="服务描述" prop="serviceDescription">
                    <el-input v-model="extension.serviceDescription" placeholder="请输入服务描述"></el-input>
                </el-form-item>
                <el-form-item label="机器人分类" prop="category">
                    <el-input v-model="extension.category" placeholder="请输入机器人分类"></el-input>
                </el-form-item>
                <el-form-item label="回拨号码" prop="callBackNumber">
                    <el-input v-model="extension.callBackNumber" placeholder="请输入回拨号码"></el-input>
                </el-form-item>
                <el-form-item label="机器人提供者信息" prop="provider">
                    <el-input v-model="extension.provider" placeholder="请输入机器人提供者信息"></el-input>
                </el-form-item>
                <el-form-item label="地理位置经度" prop="longitude">
                    <el-input v-model="extension.longitude" placeholder="请输入地理位置经度"></el-input>
                </el-form-item>
                <el-form-item label="地理位置纬度" prop="latitude">
                    <el-input v-model="extension.latitude" placeholder="地理位置纬度"></el-input>
                </el-form-item>
                <el-form-item label="主题颜色" prop="themeColour">
                    <el-input v-model="extension.themeColour" placeholder="请输入主题颜色"></el-input>
                </el-form-item>
                <el-form-item label="服务网站" prop="serviceWebsite">
                    <el-input v-model="extension.serviceWebsite" placeholder="请输入服务网站"></el-input>
                </el-form-item>
                <el-form-item label="电子邮件" prop="emailAddress">
                    <el-input v-model="extension.emailAddress" placeholder="请输入电子邮件"></el-input>
                </el-form-item>
                <el-form-item label="背景图像" prop="backgroundImage">
                    <el-input v-model="extension.backgroundImage" placeholder="请输入背景图像"></el-input>
                </el-form-item>
                <el-form-item label="地址" prop="address">
                    <el-input v-model="extension.address" placeholder="请输入地址"></el-input>
                </el-form-item>
                <el-form-item label="CSS 样式" prop="cssStyle" :class="extensionType != 'query' ? 'bottom-margin' : ''">
                    <el-input v-model="extension.cssStyle" placeholder="请输入CSS 样式"></el-input>
                </el-form-item>

                <div v-if="extensionType == 'query'">
                    <el-form-item label="接入号" prop="accessNo">
                        <el-input v-model="extension.accessNo" readonly></el-input>
                    </el-form-item>
                    <el-form-item label="域名" prop="domain">
                        <el-input v-model="extension.domain" readonly></el-input>
                    </el-form-item>
                    <el-form-item label="服务名称" prop="serviceName">
                        <el-input v-model="extension.serviceName" readonly></el-input>
                    </el-form-item>
                    <el-form-item label="服务图标" prop="serviceIcon">
                        <el-input v-model="extension.serviceIcon" readonly></el-input>
                    </el-form-item>
                    <el-form-item label="认证条款和条件" prop="TCPage">
                        <el-input v-model="extension.TCPage" readonly></el-input>
                    </el-form-item>
                    <el-form-item label="SMS 号码" prop="SMSNumber">
                        <el-input v-model="extension.SMSNumber" readonly></el-input>
                    </el-form-item>
                    <el-form-item label="认证状态" prop="verified">
                        <div v-if="extension.verified">已认证</div>
                        <div v-else>未认证</div>
                    </el-form-item>
                    <el-form-item label="认证主体名" prop="authName">
                        <el-input v-model="extension.authName" readonly></el-input>
                    </el-form-item>
                    <el-form-item label="认证有效期" prop="authExpires">
                        <el-input v-model="extension.authExpires" readonly></el-input>
                    </el-form-item>
                    <el-form-item label="认证机构" prop="authOrg">
                        <el-input v-model="extension.authOrg" readonly></el-input>
                    </el-form-item>
                    <el-form-item label="Chatbot 状态" prop="status">
                        <div v-if="extension.status == 0">正常</div>
                        <div v-if="extension.status == 1">调试</div>
                        <div v-if="extension.status == 2">暂停</div>
                    </el-form-item>
                    <el-form-item label="特殊 Chatbot" prop="criticalChatbot">
                        <div v-if="extension.criticalChatbot">应急 Chatbot</div>
                        <div v-else>非应急 Chatbot</div>
                    </el-form-item>
                    <el-form-item label="Chatbot 回调地址" prop="url">
                        <el-input v-model="extension.url" readonly></el-input>
                    </el-form-item>
                    <el-form-item label="机器人版本号" prop="version">
                        <el-input v-model="extension.version" readonly></el-input>
                    </el-form-item>
                    <el-form-item label="菜单" prop="menu" class="bottom-margin">
                        <el-input v-model="extension.menu" readonly></el-input>
                    </el-form-item>
                </div>
            </el-form>
            <span slot="footer" class="dialog-footer">
                <el-button @click="extensionVisible = false" size="small">取 消</el-button>
                <el-button type="primary" v-if="extensionType != 'query'" size="small" @click="addExtension">确 定</el-button>
            </span>
        </el-dialog>
        <!-- 详细信息 end -->
    </section>
</template>

<script>
    import {
        addPassway,
        modPassway,
        modPasswayMenu,
        delPassway,
        getPassway,
        getPasswayList,
        getChotbotType,
        getPasswayMenu,
        getPasswayExp,
        modPasswayExp
    } from '../../api/api'
    export default {
        name: "ChannelManage",
        components: {},
        data() {
            return {
                editMenuFules: {
                    displayText: [{
                        required: true,
                        message: '请输入按钮名称',
                        trigger: 'blur'
                    }],
                    data: [{
                        required: true,
                        message: '请输入返回数据',
                        trigger: 'blur'
                    }],
                    url: [{
                        required: true,
                        message: '请输入URL地址',
                        trigger: 'blur'
                    }],
                    phoneNumber: [{
                        required: true,
                        message: '请输入联系方式',
                        trigger: 'blur'
                    }],
                    latitude: [{
                        required: true,
                        message: '请输入纬度',
                        trigger: 'blur'
                    }],
                    longitude: [{
                        required: true,
                        message: '请输入进度',
                        trigger: 'blur'
                    }],
                    query: [{
                        required: true,
                        message: '请输入查询',
                        trigger: 'blur'
                    }],
                    label: [{
                        required: true,
                        message: '请输入标签',
                        trigger: 'blur'
                    }],
                    requestLocationPush: [{
                        required: true,
                        message: '请输入请求位置推送',
                        trigger: 'blur'
                    }],
                    dateTime: [{
                        required: true,
                        message: '请选择时间',
                        trigger: 'change'
                    }],
                    title: [{
                        required: true,
                        message: '请输入主题',
                        trigger: 'blur'
                    }],
                    description: [{
                        required: true,
                        message: '请输入描述',
                        trigger: 'blur'
                    }],
                    text: [{
                        required: true,
                        message: '请输入文本信息',
                        trigger: 'blur'
                    }],
                    phoneType: [{
                        required: true,
                        message: '请输入电话类型',
                        trigger: 'blur'
                    }],
                    enableDisplayedNotifications: [{
                        required: true,
                        message: '请输入共享设备',
                        trigger: 'blur'
                    }]
                },
                rules: {
                    userId: [{
                        required: true,
                        message: '请输入接入号',
                        trigger: 'blur'
                    }],
                    chatbotName: [{
                        required: true,
                        message: '请输入机器人名称',
                        trigger: 'blur'
                    }],
                    appId: [{
                        required: true,
                        message: '请输入应用id',
                        trigger: 'blur'
                    }],
                    appSecret: [{
                        required: true,
                        message: '请输入密码',
                        trigger: 'blur'
                    }],
                    chatbotType: [{
                        required: true,
                        message: '请选择通道类型',
                        trigger: 'change'
                    }],
                    apiVersion: [{
                        required: true,
                        message: '请输入api版本号',
                        trigger: 'blur'
                    }],
                    serverRoot: [{
                        required: true,
                        message: '请输入服务器域名(IP)端口',
                        trigger: 'blur'
                    }],
                    cspId: [{
                        required: true,
                        message: '请输入csp编码',
                        trigger: 'blur'
                    }],
                    cspToken: [{
                        required: true,
                        message: '请输入cspToken',
                        trigger: 'blur'
                    }],
                    ltToken: [{
                        required: true,
                        message: '请输入联通随机码',
                        trigger: 'blur'
                    }],
                },
                carrierType: 0,
                menuType: 'N1',
                channelList: [],
                params: {
                    userId: '',
                    chatbotName: '',
                    menuStatus: ''
                },
                tableLoading: false,
                page: {
                    curPage: 1,
                    size: 10,
                    total: 0
                }, // 传入后台参数
                dialogForm: {},
                popVisible: false,
                groupName: '',
                groupId: 0,
                roleMap: {},
                channelModel: {},
                dialogVisible: false,
                fixedMenuBool: false,
                dialogTitle: '详情',

                addMenuIndex: 0,
                childrenAddMenuIndex: 0,
                addMenuList: [],
                editMenuForm: {
                    menuType: 'N1',
                    displayText: '',
                    data: '',
                    url: '',
                    phoneNumber: '',
                    latitude: '',
                    longitude: '',
                    query: '',
                    label: '',
                    requestLocationPush: '',
                    dateTime: [],
                    title: '',
                    description: '',
                    text: '',
                    phoneType: '',
                    enableDisplayedNotifications: ''
                },
                MenuNameBool: 'parent',
                menuId: 0,
                idIndex: 0,
                childrenIdIndex: 0,
                cunChuOneMenu: {},
                copyMenuJson: '',
                chotbotType: [],
                chatbotList: {},
                editContentBool: false,
                menuContentBool: true,
                copyId: 0,
                relationIndex: -1,

                extensionVisible: false,
                extension: {},
                extensionId: 0,
                extensionType: '',
                extensionTitle:''
            }
        },
        watch: {
            "channelModel.chatbotType"(val) {
                this.carrierType = val
            }
        },
        methods: {
            // 新增详细信息
            addExtension() {
                let param = {
                    id: this.extensionId
                }
                Object.assign(param, this.extension)
                modPasswayExp(param).then(res => {
                    if (res.success) {
                        this.$message.success("新增成功")
                        this.extensionVisible = false
                    } else {
                        this.$message.error(res.message)
                    }
                })
            },
            extensionInfo(row, editOrQuery) {
                this.extensionType = editOrQuery
                if(editOrQuery == 'query'){
                    this.extensionTitle = '详细信息'
                }else{
                    this.extensionTitle = '编辑详细信息'
                }
                this.extensionVisible = true
                this.extensionId = row.id
                getPasswayExp({
                    id: row.id
                }).then(res => {
                    if (res.success) {
                        let chatbotExp = JSON.parse(res.data.chatbotExp)
                        console.log('chatbotExp:::',chatbotExp)
                        this.extension = chatbotExp

                        if(editOrQuery == 'query'){
                            this.extension.menu = JSON.stringify(this.extension.menu)
                        }
                    }
                })
            },

            //通道类型
            getChotbotType() {
                getChotbotType().then(rsp => {
                    this.chotbotType = rsp.data
                })
            },
            //转为json格式
            copyMenu() {
                this.$refs.ruleForm.validate((valid) => {
                    if (valid) {
                        this.copyMenuJson = JSON.stringify(this.addMenuList)
                        console.log('copyMenuInfo:', this.copyMenuJson)
                    }
                });
            },
            onCopy(e) {
                this.$refs.ruleForm.validate((valid) => {
                    if (valid) {
                        this.$message.success("如有修改添加菜单,请先提交,内容已复制到剪切板！")
                    }
                });
            },
            // 复制失败时的回调函数
            onError(e) {
                this.$message.error("抱歉，复制失败！")
            },
            //提交审核
            submitToExamine() {
                this.$refs.ruleForm.validate((valid) => {
                    if (valid) {
                        var jsonList = JSON.stringify(this.addMenuList)
                        if (this.channelList.menu == null || this.channelList.menu == '') {
                            modPasswayMenu({
                                id: this.chatbotList.id,
                                menu: jsonList
                            }).then(rsp => {
                                if (rsp.success) {
                                    // this.fixedMenuBool = false;
                                    this.$message.success('保存成功')

                                    getPasswayMenu({
                                        id: this.copyId
                                    }).then(res => {
                                        this.copyMenuJson = res.data.jsonMenu
                                    })
                                    this.loadData()
                                } else {
                                    this.$message.error(rsp.message)
                                }
                            })
                        } else {
                            modPasswayMenu({
                                id: this.chatbotList.id,
                                menu: jsonList
                            }).then(rsp => {
                                if (rsp.success) {
                                    // this.fixedMenuBool = false;
                                    this.$message.success('修改成功')
                                    getPasswayMenu({
                                        id: this.copyId
                                    }).then(res => {
                                        this.copyMenuJson = res.data.jsonMenu
                                    })
                                    this.loadData()
                                } else {
                                    this.$message.error(rsp.message)
                                }
                            })
                        }
                        console.log('json----', jsonList)
                    }
                });
            },
            //删除菜单
            delMenu() {
                if (this.addMenuList.length > 0) {
                    this.$confirm('此操作将永久删除该菜单, 是否继续?', '提示', {
                        confirmButtonText: '确定',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(() => {
                        this.editContentBool = false
                        if (this.MenuNameBool == 'parent') {
                            for (var i = 0; i < this.addMenuList.length; i++) {
                                if (this.menuId == this.addMenuList[i].id) {
                                    console.log("11111下标--------", i)
                                    this.addMenuList.splice(i, 1);
                                }
                            }
                        } else {
                            for (var i = 0; i < this.addMenuList.length; i++) {
                                if (this.cunChuOneMenu.id == this.addMenuList[i].id) {
                                    for (var j = 0; j < this.addMenuList[i].childrenAddMenuList.length; j++) {
                                        if (this.menuId == this.addMenuList[i].childrenAddMenuList[j].id) {
                                            this.addMenuList[i].childrenAddMenuList.splice(j, 1);
                                            this.addMenuList[i].childrenAddMenuIndex -= 1;
                                            this.addMenuList[i].childrenMenuHeight += 32;
                                            if (this.addMenuList[i].childrenAddMenuList.length == 0) {
                                                this.addMenuList[i].menuContentBool = true
                                                this.addMenuList[i].menuContentType = this.addMenuList[i]
                                                    .menuType
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        this.copyMenuJson = JSON.stringify(this.addMenuList)
                        this.$message.success('删除成功')
                    })
                } else {
                    this.$message.error('请选择菜单')
                }
            },
            //点击菜单获取菜单信息
            menuClickInfo(item, index) {
                this.$refs.ruleForm.validate((valid) => {
                    if (valid) {
                        this.relationIndex = index
                        console.log('菜单信息----------', item)
                        this.editMenuForm.displayText = item.displayText
                        this.editMenuForm.data = item.data
                        if (item.menuType == 'N2') {
                            this.editMenuForm.url = item.url
                        } else if (item.menuType == 'N3') {
                            this.editMenuForm.phoneNumber = item.phoneNumber
                        } else if (item.menuType == 'N4') {
                            this.editMenuForm.phoneNumber = item.phoneNumber
                        } else if (item.menuType == 'N5') {
                            this.editMenuForm.latitude = item.latitude
                            this.editMenuForm.longitude = item.longitude
                            this.editMenuForm.query = item.query
                            this.editMenuForm.label = item.label
                        } else if (item.menuType == 'N6') {
                            this.editMenuForm.requestLocationPush = item.requestLocationPush
                        } else if (item.menuType == 'N7') {
                            this.editMenuForm.dateTime = []
                            this.editMenuForm.dateTime.push(item.startTime)
                            this.editMenuForm.dateTime.push(item.endTime)
                            this.editMenuForm.title = item.title
                            this.editMenuForm.description = item.description
                        } else if (item.menuType == 'N8') {
                            this.editMenuForm.phoneNumber = item.phoneNumber
                            this.editMenuForm.text = item.text
                        } else if (item.menuType == 'N9') {
                            this.editMenuForm.phoneNumber = item.phoneNumber
                            this.editMenuForm.phoneType = item.phoneType
                        } else if (item.menuType == 'N10') {
                            this.editMenuForm.enableDisplayedNotifications = item.enableDisplayedNotifications
                        }
                        this.MenuNameBool = item.menuParentChildren
                        this.menuId = item.id
                        this.editContentBool = true
                        this.editMenuForm.menuType = item.menuType
                        this.menuContentBool = item.menuContentBool
                    }
                });

            },
            //点击子菜单获取子菜单信息
            childrenMenuClickInfo(item, item2) {
                this.$refs.ruleForm.validate((valid) => {
                    if (valid) {
                        this.editContentBool = true
                        this.menuContentBool = true
                        this.editMenuForm.displayText = item2.displayText
                        this.editMenuForm.data = item2.data
                        if (item2.menuType == 'N2') {
                            this.editMenuForm.url = item2.url
                        } else if (item2.menuType == 'N3') {
                            this.editMenuForm.phoneNumber = item2.phoneNumber
                        } else if (item2.menuType == 'N4') {
                            this.editMenuForm.phoneNumber = item2.phoneNumber
                        } else if (item2.menuType == 'N5') {
                            this.editMenuForm.latitude = item2.latitude
                            this.editMenuForm.longitude = item2.longitude
                            this.editMenuForm.query = item2.query
                            this.editMenuForm.label = item2.label
                        } else if (item2.menuType == 'N6') {
                            this.editMenuForm.requestLocationPush = item2.requestLocationPush
                        } else if (item2.menuType == 'N7') {
                            this.editMenuForm.dateTime = []
                            this.editMenuForm.dateTime.push(item2.startTime)
                            this.editMenuForm.dateTime.push(item2.endTime)
                            this.editMenuForm.title = item2.title
                            this.editMenuForm.description = item2.description
                        } else if (item2.menuType == 'N8') {
                            this.editMenuForm.phoneNumber = item2.phoneNumber
                            this.editMenuForm.text = item2.text
                        } else if (item2.menuType == 'N9') {
                            this.editMenuForm.phoneNumber = item2.phoneNumber
                            this.editMenuForm.phoneType = item2.phoneType
                        } else if (item2.menuType == 'N10') {
                            this.editMenuForm.enableDisplayedNotifications = item2.enableDisplayedNotifications
                        }
                        this.MenuNameBool = item2.menuParentChildren
                        this.cunChuOneMenu = item
                        this.menuId = item2.id
                        this.editMenuForm.menuType = item2.menuType
                    }
                });

            },
            //给菜单赋值
            menuNameBlur() {
                for (var i = 0; i < this.addMenuList.length; i++) {
                    if (this.menuId == this.addMenuList[i].id) {
                        this.addMenuList[i].displayText = this.editMenuForm.displayText;
                        this.addMenuList[i].data = this.editMenuForm.data;
                        if (this.editMenuForm.menuType == 'N2') {
                            this.addMenuList[i].url = this.editMenuForm.url
                        } else if (this.editMenuForm.menuType == 'N3') {
                            this.addMenuList[i].phoneNumber = this.editMenuForm.phoneNumber
                        } else if (this.editMenuForm.menuType == 'N4') {
                            this.addMenuList[i].phoneNumber = this.editMenuForm.phoneNumber
                        } else if (this.editMenuForm.menuType == 'N5') {
                            this.addMenuList[i].latitude = this.editMenuForm.latitude
                            this.addMenuList[i].longitude = this.editMenuForm.longitude
                            this.addMenuList[i].query = this.editMenuForm.query
                            this.addMenuList[i].label = this.editMenuForm.label
                        } else if (this.editMenuForm.menuType == 'N6') {
                            this.addMenuList[i].requestLocationPush = this.editMenuForm.requestLocationPush
                        } else if (this.editMenuForm.menuType == 'N7') {
                            if (this.editMenuForm.dateTime != undefined) {
                                this.addMenuList[i].startTime = this.editMenuForm.dateTime[0]
                                this.addMenuList[i].endTime = this.editMenuForm.dateTime[1]
                            }
                            this.addMenuList[i].title = this.editMenuForm.title
                            this.addMenuList[i].description = this.editMenuForm.description
                        } else if (this.editMenuForm.menuType == 'N8') {
                            this.addMenuList[i].phoneNumber = this.editMenuForm.phoneNumber
                            this.addMenuList[i].text = this.editMenuForm.text
                        } else if (this.editMenuForm.menuType == 'N9') {
                            this.addMenuList[i].phoneNumber = this.editMenuForm.phoneNumber
                            this.addMenuList[i].phoneType = this.editMenuForm.phoneType
                        } else if (this.editMenuForm.menuType == 'N10') {
                            this.addMenuList[i].enableDisplayedNotifications = this.editMenuForm
                                .enableDisplayedNotifications
                        }
                        // this.addMenuList[i].menuContent = this.editMenuForm.menuContent;
                        this.addMenuList[i].menuType = this.editMenuForm.menuType
                        this.addMenuList[i].menuContentType = this.editMenuForm.menuType
                    }
                }
                this.copyMenuJson = JSON.stringify(this.addMenuList)
            },
            //给子菜单赋值
            childrenMenuNameBlur() {
                let formInfo = this.editMenuForm
                for (var i = 0; i < this.addMenuList.length; i++) {
                    if (this.cunChuOneMenu.id == this.addMenuList[i].id) {
                        for (var j = 0; j < this.addMenuList[i].childrenAddMenuList.length; j++) {
                            if (this.menuId == this.addMenuList[i].childrenAddMenuList[j].id) {
                                // Object.assign(formInfo, this.addMenuList[i].childrenAddMenuList[j])
                                // this.addMenuList[i].childrenAddMenuList[j] = formInfo
                                this.addMenuList[i].childrenAddMenuList[j].displayText = this.editMenuForm.displayText;
                                this.addMenuList[i].childrenAddMenuList[j].data = this.editMenuForm.data;
                                if (this.editMenuForm.menuType == 'N2') {
                                    this.addMenuList[i].childrenAddMenuList[j].url = this.editMenuForm.url
                                } else if (this.editMenuForm.menuType == 'N3') {
                                    this.addMenuList[i].childrenAddMenuList[j].phoneNumber = this.editMenuForm
                                        .phoneNumber
                                } else if (this.editMenuForm.menuType == 'N4') {
                                    this.addMenuList[i].childrenAddMenuList[j].phoneNumber = this.editMenuForm
                                        .phoneNumber
                                } else if (this.editMenuForm.menuType == 'N5') {
                                    this.addMenuList[i].childrenAddMenuList[j].latitude = this.editMenuForm.latitude
                                    this.addMenuList[i].childrenAddMenuList[j].longitude = this.editMenuForm.longitude
                                    this.addMenuList[i].childrenAddMenuList[j].query = this.editMenuForm.query
                                    this.addMenuList[i].childrenAddMenuList[j].label = this.editMenuForm.label
                                } else if (this.editMenuForm.menuType == 'N6') {
                                    this.addMenuList[i].childrenAddMenuList[j].requestLocationPush = this.editMenuForm
                                        .requestLocationPush
                                } else if (this.editMenuForm.menuType == 'N7') {
                                    if (this.editMenuForm.dateTime != undefined) {
                                        this.addMenuList[i].childrenAddMenuList[j].startTime = this.editMenuForm
                                            .dateTime[0]
                                        this.addMenuList[i].childrenAddMenuList[j].endTime = this.editMenuForm.dateTime[
                                            1]
                                    }
                                    this.addMenuList[i].childrenAddMenuList[j].title = this.editMenuForm.title
                                    this.addMenuList[i].childrenAddMenuList[j].description = this.editMenuForm
                                        .description
                                } else if (this.editMenuForm.menuType == 'N8') {
                                    this.addMenuList[i].childrenAddMenuList[j].phoneNumber = this.editMenuForm
                                        .phoneNumber
                                    this.addMenuList[i].childrenAddMenuList[j].text = this.editMenuForm.text
                                } else if (this.editMenuForm.menuType == 'N9') {
                                    this.addMenuList[i].childrenAddMenuList[j].phoneNumber = this.editMenuForm
                                        .phoneNumber
                                    this.addMenuList[i].childrenAddMenuList[j].phoneType = this.editMenuForm.phoneType
                                } else if (this.editMenuForm.menuType == 'N10') {
                                    this.addMenuList[i].childrenAddMenuList[j].enableDisplayedNotifications = this
                                        .editMenuForm.enableDisplayedNotifications
                                }

                                this.addMenuList[i].childrenAddMenuList[j].menuType = this.editMenuForm.menuType;
                                this.addMenuList[i].childrenAddMenuList[j].menuContentType = this.editMenuForm.menuType;
                                // console.log('菜单信息22----------', this.addMenuList[i])
                            }
                        }
                    }
                }
                this.copyMenuJson = JSON.stringify(this.addMenuList)
            },
            handleClick(tab, event) {
                this.editMenuForm = {
                        menuType: tab.name,
                        displayText: this.editMenuForm.displayText,
                        data: ''
                    },
                    console.log(tab, event);
            },
            addMenuClick() {
                if (this.addMenuList.length > 0) {
                    this.$refs.ruleForm.validate((valid) => {
                        if (valid) {
                            this.doAddMenuClick()
                        }
                    });
                } else {
                    this.doAddMenuClick()
                }

            },

            doAddMenuClick() {
                if (this.addMenuList.length != 0) {
                    var maxNum = Math.max.apply(Math, this.addMenuList.map(function(o) {
                        return o.id
                    }))
                    this.idIndex = maxNum + 1
                } else {
                    ++this.idIndex
                }
                this.addMenuList.push({
                    id: this.idIndex,
                    displayText: '菜单名称',
                    childrenAddMenuList: [],
                    childrenHeight: 0,
                    childrenAddMenuIndex: 0,
                    childrenMenuHeight: -42,
                    menuParentChildren: 'parent',
                    menuType: 'N1',
                    menuContentType: 'N1',
                    menuContentBool: true
                })
                this.relationIndex = this.addMenuList.length
                this.relationIndex -= 1
                let menuListLast = this.addMenuList
                menuListLast = menuListLast[menuListLast.length - 1]
                this.editMenuForm.displayText = menuListLast.displayText
                this.MenuNameBool = menuListLast.menuParentChildren
                this.menuId = menuListLast.id
                this.editMenuForm.menuType = 'N1'
                this.editMenuForm.data = ''
                this.menuContentType = 'N0'
                this.editContentBool = true
                this.menuContentBool = true

                this.copyMenuJson = JSON.stringify(this.addMenuList)
            },

            childrenAddMenuClick(index) {
                // for(var j = 0;j<this.addMenuList.length;j++){
                if (this.addMenuList[index].childrenAddMenuList.length == 0) {
                    this.$confirm('添加子菜单后，一级菜单仅显示菜单名称，内容将失效', '提示', {
                        confirmButtonText: '确定',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(() => {
                        this.childrenAddMenuInfo(index)
                    })
                } else {
                    this.childrenAddMenuInfo(index)
                }
                // }

            },
            childrenAddMenuInfo(index) {
                this.$refs.ruleForm.validate((valid) => {
                    if (valid) {
                        this.editContentBool = true
                        this.menuContentBool = true

                        for (var i = 0; i < 3; i++) {
                            if (index == i) {
                                this.addMenuList[i].menuContentBool = false
                                if (this.addMenuList[i].childrenAddMenuList.length != 0) {
                                    var childrenMaxNum = Math.max.apply(Math, this.addMenuList[i]
                                        .childrenAddMenuList
                                        .map(
                                            function(o) {
                                                return o.id
                                            }))
                                    this.childrenIdIndex = childrenMaxNum + 1
                                } else {
                                    ++this.childrenIdIndex
                                }

                                this.addMenuList[i].childrenAddMenuIndex++;
                                this.addMenuList[i].childrenAddMenuList.push({
                                    id: this.childrenIdIndex + '01',
                                    displayText: '子菜单名称',
                                    menuParentChildren: 'children',
                                    menuType: 'N1',
                                    menuContentType: 'N1'
                                })
                                if (this.addMenuList[i].childrenAddMenuIndex < 5) {
                                    this.addMenuList[i].childrenMenuHeight -= 32;
                                }
                                let menuListLast = this.addMenuList[i].childrenAddMenuList
                                menuListLast = menuListLast[menuListLast.length - 1]

                                this.addMenuList[index].menuContentType = 'N0'
                                this.editMenuForm.displayText = menuListLast.displayText
                                this.MenuNameBool = menuListLast.menuParentChildren
                                this.cunChuOneMenu = this.addMenuList[i]
                                this.menuId = menuListLast.id
                                this.editMenuForm.menuType = 'N1'
                                this.editMenuForm.data = ''
                                this.editContentBool = true
                                // this.copyMenuJson = JSON.stringify(this.addMenuList)
                            }
                        }
                    }
                });
            },
            handleCurrentChange: function(currentPage) { //改变当前页
                this.page.curPage = currentPage
                this.loadData()
            },
            handleSizeChange: function(size) { //改变页面size
                this.page.size = size;
                this.loadData()
            },
            search() {
                this.loadData()
            },
            fixedMenu(row) {
                // console.log('row---:', row)
                this.copyId = row.id
                getPasswayMenu({
                    id: row.id
                }).then(res => {
                    this.fixedMenuBool = true;
                    if (res.data.menu == null) {
                        this.addMenuList = []
                        this.chatbotList = res.data
                        this.chatbotList.id = row.id
                        this.editContentBool = false
                    } else {
                        this.editContentBool = false
                        this.chatbotList = res.data
                        this.chatbotList.id = row.id
                        this.addMenuList = JSON.parse(res.data.menu)
                        this.copyMenuJson = res.data.jsonMenu
                        console.log('this.addMenuList:', this.addMenuList)
                        // console.log('this.copyMenuJson:', this.copyMenuJson)
                    }
                })
            },
            toDetail(channel) {
                this.dialogVisible = true
                this.dialogTitle = '编辑通道'
                this.channelModel = Object.assign({}, channel)

                console.log('ttttt:', this.channelModel)
            },
            deleteChannel(channel) {
                this.$confirm('此操作将永久删除该通道, 是否继续?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    delPassway({
                        id: channel.id
                    }).then(rsp => {
                        if (rsp.success) {
                            this.$message({
                                type: 'success',
                                message: '删除成功!'
                            });
                            this.loadData()
                        }
                    })
                }).catch(() => {});
            },

            loadData() {
                let param = {
                    curPage: this.page.curPage,
                    size: this.page.size
                }
                Object.assign(param, this.params)
                this.tableLoading = true
                getPasswayList(param).then(rsp => {
                    console.log('channel resp:', rsp)
                    this.tableLoading = false
                    this.channelList = rsp.data.records
                    this.page.total = rsp.data.total
                })
            },
            saveChatbot() {
                this.$refs.chatbotForm.validate(valid => {
                    if (valid) {
                        if (this.channelModel.id) {
                            modPassway(this.channelModel).then(rsp => {
                                if (rsp.success) {
                                    this.dialogVisible = false
                                    this.$message.success('编辑成功')
                                    this.loadData()
                                } else {
                                    this.$message.error(rsp.message)
                                }
                            })
                        } else {
                            addPassway(this.channelModel).then(rsp => {
                                if (rsp.success) {
                                    this.dialogVisible = false
                                    this.$message.success('新增成功')
                                    this.loadData()
                                } else {
                                    this.$message.error(rsp.message)
                                }
                            })
                        }
                    }
                })

            }
        },
        mounted() {

        },
        activated() {
            this.loadData();
            this.getChotbotType();
            document.getElementsByClassName('el-table__body-wrapper')[0].style.height = document.documentElement
                .clientHeight -
                50 - 84 - 40 - 52 - 40 - 47 + 'px'
        }
    }
</script>

<style lang="less">
    .member-manage {
        .el-dialog__footer {
            text-align: center !important;
        }
        .extensionInfo{
            .el-dialog{
                margin-top: 12vh !important;
                .el-dialog__body{
                    overflow: auto;
                    height:600px;
                    .bottom-margin{
                        margin-bottom: 0 !important;
                    }
                }
            }
        }

        .el-table__body-wrapper {
            overflow: auto;

            &::-webkit-scrollbar {
                width: 4px;
                height: 0px;
            }

            &::-webkit-scrollbar-thumb {
                border-radius: 10px;
                -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
                background: rgba(0, 0, 0, 0.2);
            }

            &::-webkit-scrollbar-track {
                -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
                border-radius: 0;
                background: rgba(0, 0, 0, 0.1);
            }
        }

        .editMenu {
            border: 1px solid #ccc;
            border-radius: 5px;
            width: 80%;
            height: 560px;
            padding: 20px;
            text-align: left;
            overflow: auto;

            &::-webkit-scrollbar {
                width: 4px;
                height: 4px;
            }

            &::-webkit-scrollbar-thumb {
                border-radius: 10px;
                -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
                background: rgba(0, 0, 0, 0.2);
            }

            &::-webkit-scrollbar-track {
                -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
                border-radius: 0;
                background: rgba(0, 0, 0, 0.1);
            }


            .el-input__inner {
                width: 100%;
            }

            .menuMargin {
                margin-top: 10px;
            }

            .menuLineHeight {
                line-height: 40px;
            }

            .newMenu {
                padding-bottom: 10px;
                border-bottom: 1px solid #ccc;
            }

            >div {
                margin-bottom: 15px;
            }
        }

        .preview-resource {
            .preview {
                width: 300px;
                margin: auto;

                .mobile-header {
                    height: 60px;
                    border-radius: 15px 15px 0 0;
                    background-color: #333333;
                    text-align: center;

                    &::before {
                        display: inline-block;
                        width: 6px;
                        height: 6px;
                        margin: 27px 6px;
                        background-color: white;
                        border-radius: 50%;
                        content: '';
                    }

                    &::after {
                        display: inline-block;
                        width: 30px;
                        height: 6px;
                        margin: 27px 6px;
                        background-color: white;
                        border-radius: 20px;
                        content: '';
                    }
                }

                .mobile-main {
                    height: 440px;
                    // padding: 10px 15px;
                    border: 1px solid #e1e1e1;
                    position: relative;
                    border-width: 0 1px 0 1px;
                    overflow-y: auto;

                    .box {
                        display: flex;
                        background-color: #f5f5f5;
                        text-align: center;
                        border-top: 1px solid #ccc;

                        >div {
                            border-right: 1px solid #ccc;
                            padding: 10px;
                            cursor: pointer;
                            position: relative;
                        }

                        .addMenu {
                            padding: 10px 14px !important;

                            .menuOverflow {
                                overflow: hidden;
                                width: 56px;
                                text-overflow: ellipsis;
                                white-space: nowrap;
                            }
                        }

                        >div:last-child {
                            // border-top: 1px solid #ccc;
                            border-right: 0px solid #ccc;

                        }

                        .childrenMenu {
                            background-color: #fff;
                            position: absolute;
                            left: 0;
                            border-radius: 5px;
                            box-shadow: 0 0 5px #ccc;

                            >div {
                                padding: 7px;
                                font-size: 12px;
                                border-bottom: 1px solid #ccc;

                                >div {
                                    overflow: hidden;
                                    width: 66px;
                                    text-overflow: ellipsis;
                                    white-space: nowrap;
                                }
                            }

                        }
                    }

                    .title-m {
                        display: flex;
                        align-items: center;
                        padding: 5px 0 12px 0;
                        font-size: 14px;
                        color: #66b1ff;

                        img {
                            height: 24px;
                            margin-right: 6px;
                        }

                    }

                    .item-desc {
                        .desc {
                            margin-top: -11px;
                            padding: 10px 0;
                            font-size: 14px;
                            line-height: 20px;

                            /*background-color: #f1f1f1;*/
                            h3 {
                                padding: 8px 10px;
                                font-size: 15px;
                                color: #303133;
                                text-align: center;
                            }

                            p {
                                margin: 10px 0;
                                padding: 0 10px;
                                max-height: 80px;
                                overflow-y: auto;
                            }

                            .button {
                                width: 80%;
                                margin: 5px auto 8px auto;
                                /*line-height: 34px;*/
                                font-size: 14px;
                                background-color: white;
                                border-radius: 10px;
                                text-align: center;
                            }
                        }
                    }

                    .text {
                        .desc {
                            margin-top: 0px;

                            h3 {
                                padding-top: 0;
                            }
                        }
                    }

                    .image,
                    .video {
                        .desc {
                            margin-top: 0px;
                            padding-top: 0;

                            h3 {
                                padding-bottom: 2px;
                            }
                        }

                    }

                    .suggest {
                        display: inline-block;
                        padding: 0 10px;
                        height: 20px;
                        line-height: 20px;
                        font-size: 12px;
                        border-radius: 4px;
                        margin-right: 10px;
                        background-color: #f1f1f1;
                    }
                }

                .mobile-footer {
                    height: 60px;
                    border-radius: 0 0 15px 15px;
                    background-color: #333333;
                    text-align: center;

                    &::before {
                        display: inline-block;
                        width: 36px;
                        height: 36px;
                        margin-top: 12px;
                        border: 2px solid white;
                        border-radius: 50%;
                        content: '';
                    }
                }
            }

            .scrollbar::-webkit-scrollbar {
                width: 1px;
            }

            .desc .scrollbar::-webkit-scrollbar {
                width: 4px;
            }
        }
    }
</style>
