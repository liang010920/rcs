<template>
    <section class="white-black-manage wrap-container">
        <el-form :inline="true" :model="chatbotModel" size="small">

            <!--<el-form-item>-->
                <!--<el-input v-model="chatbotModel.param" placeholder="搜索名称"></el-input>-->
            <!--</el-form-item>-->

            <!--<el-form-item>-->
                <!--<el-button type="primary" @click="search" icon="el-icon-search">查询</el-button>-->
            <!--</el-form-item>-->

            <el-form-item>
                <el-button type="primary" @click="dialogFlag=true,dialogTitle='新增黑白名单';dialogForm={type:1,mode:1}">新增黑白名单</el-button>
            </el-form-item>

        </el-form>

        <section>
            <el-table :data="dataList" fit v-loading="tableLoading" size="small" border
            :header-cell-style="{'background-color': '#fafafa'}">
                <el-table-column prop="name" label="名称" align="center"></el-table-column>
                <el-table-column prop="type" label="类型" align="center">
                    <template slot-scope="scope">
                        {{scope.row.type==1?'黑名单':'白名单'}}
                    </template>
                </el-table-column>
                <el-table-column prop="controlStatus" label="状态" align="center">
                    <template slot-scope="scope">
                        {{scope.row.controlStatus==1?'已启用':'已停用'}}
                    </template>
                </el-table-column>
                <el-table-column prop="createTime" label="创建时间" align="center"></el-table-column>

                <!-- 操作区 -->
                <el-table-column label="操作" align="center">
                    <template slot-scope="scope">
                        <el-button  type="text" size="small" @click="setStatus(scope.row,1)" v-if="scope.row.controlStatus==0">启用</el-button>
                        <el-button  type="text" size="small" @click="setStatus(scope.row,0)" v-if="scope.row.controlStatus==1">停用</el-button>
                        <el-button  type="text" size="small" @click="toDetail(scope.row)">编辑</el-button>
                        <el-button  type="text" size="small" @click="deleteData(scope.row)">删除</el-button>
                    </template>
                </el-table-column>

            </el-table>
        </section>

        <!-- 查看详情 start -->
        <el-dialog
            class="query-detail-dialog"
            :title="dialogTitle"
            :visible.sync="dialogFlag"
            width="35%"
            center
            :close-on-click-modal="false">

            <el-form label-width="100px" size="small" :model="dialogForm">

                <el-form-item label="名称">
                   <el-input v-model="dialogForm.name"></el-input>
                </el-form-item>

                <el-form-item label="名单类型">
                    <el-radio-group v-model="dialogForm.type">
                        <el-radio :label="1">黑名单</el-radio>
                        <el-radio :label="2">白名单</el-radio>
                    </el-radio-group>
                </el-form-item>

                <el-form-item label="规则">
                    <el-radio-group v-model="dialogForm.mode">
                        <el-radio :label="1">手机号码</el-radio>
                        <el-radio :label="2">号段</el-radio>
                    </el-radio-group>
                </el-form-item>

                <el-form-item>
                    <div class="rule-wrap">
                        <section class="mobile" v-show="dialogForm.mode==1">
                            <el-input
                                type="textarea"
                                :rows="3"
                                placeholder="请输入手机号码，手机号码之间使用英文逗号 ',' 隔开。"
                                v-model="dialogForm.phoneNo">
                            </el-input>
                        </section>

                        <section class="mobile-section" v-show="dialogForm.mode==2">
                            <el-input oninput="value=value.replace(/[^\d]/g,'')" v-model="dialogForm.pre" maxlength="3" placeholder="138" style="width: 60px"></el-input>
                            <el-input oninput="value=value.replace(/[^\d]/g,'')" v-model="dialogForm.startNo" maxlength="8" placeholder="起始号段" style="width: 150px"></el-input>
                            <el-input oninput="value=value.replace(/[^\d]/g,'')" v-model="dialogForm.endNo" maxlength="8" placeholder="结束号段" style="width: 150px"></el-input>
                        </section>
                    </div>
                </el-form-item>

            </el-form>


            <span slot="footer" class="dialog-footer">
                <el-button @click="dialogFlag = false" size="small">取 消</el-button>
                <el-button @click="addData" size="small" type="primary">确 定</el-button>
            </span>

        </el-dialog>
        <!-- 查看详情 end -->
    </section>
</template>

<script>
    import {getBlackWhiteList,addBlackWhite,modBlackWhite,delBlackWhite} from '../../api/api'
    export default {
        name: "WhiteBlackManage",
        components: {},
        data() {
            return {
                dialogTitle:'详情',
                chatbotModel:{},
                tableLoading:false,
                dialogFlag:false,
                ruleType:1,
                start:'',
                end:'',
                pre:'',
                dataList:[
                ],
                dialogForm:{type:1,mode:1},
                page:{curPage:1,size:10,total:0},
            }
        },
        methods: {
            register(){

            },
            toDetail(row){
                this.dialogForm = Object.assign({},row)
                this.dialogFlag = true
                this.dialogTitle = '编辑黑白名单'
            },
            deleteData(row){
                let tips = "是否确认删除？";

                this.$confirm(tips, '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                   delBlackWhite({blackWhiteListId:row.id}).then(rsp=>{
                       if (rsp.success){
                           this.$message.success('删除成功')
                           this.loadData()
                       }
                   })
                }).catch(() => {
                    //取消
                });

            },
            setStatus(row,status){
                modBlackWhite({blackWhiteListId:row.id,controlStatus:status}).then(rsp=>{
                    if (rsp.success){
                        this.$message.success('修改成功')
                        this.loadData()
                    }
                })
            },
            addData(){
                if (this.dialogForm.mode==2){
                    //
                    this.dialogForm.pre = this.dialogForm.pre
                    this.dialogForm.startNo = this.dialogForm.startNo
                    this.dialogForm.endNo = this.dialogForm.endNo
                    if (this.dialogForm.pre.length!=3||this.dialogForm.startNo.length!=8||this.dialogForm.endNo.length!=8){
                        this.$message.warning('前缀为3位数字，后缀为8位数字')
                        return
                    }
                }else{
                    let phone = this.dialogForm.phoneNo;
                    if(phone != undefined || phone != null || phone != ''){
                        var myreg= /^[1][3,4,5,6,7,8,9][0-9]{9}$/;
                        let phoneVerification
                        phone = phone.replace(/，/g,",")
                        if(phone.indexOf(',') != -1){
                            phoneVerification = phone.split(',');
                            for(var i = 0; i<phoneVerification.length;i++){
                                if (!myreg.test(phoneVerification[i])) {
                                    this.$message.warning("请输入正确的号码！")
                                    return
                                }
                            }
                        }else{
                            if (!myreg.test(phone)) {
                                this.$message.warning("请输入正确的号码！",phone)
                                return
                            }
                        }
                    }else{
                        this.$message.warning("不能为空手机号码！")
                        return
                    }


                }
                if (this.dialogForm.id){
                    this.dialogForm.blackWhiteListId = this.dialogForm.id
                    modBlackWhite(this.dialogForm).then(rsp=>{
                        if (rsp.success){
                            this.$message.success('修改成功')
                            this.loadData()
                        }
                    })
                } else{
                    addBlackWhite(this.dialogForm).then(rsp=>{
                        if (rsp.success){
                            this.$message.success('新增成功')
                            this.dialogFlag=false;
                            this.loadData()
                        }else {
                            this.$message.error(rsp.message)
                        }
                    })
                }

            },
            loadData(){
                // let param = {curPage:this.page.curPage,size:this.page.size}
                let param = {}
                Object.assign(param,this.params)
                this.tableLoading = true
                getBlackWhiteList(param).then(rsp=>{
                    // console.log('blackw resp:',rsp)
                    this.tableLoading = false
                    // this.dataList = rsp.data.records
                    this.dataList = rsp.data
                    this.dataList.forEach(val=>{
                        let content = JSON.parse(val.content)
                        val.mode = content.mode
                        if (content.mode==1){
                            val.phoneNo = content.phoneNo
                        } else if (content.mode==2) {
                            val.pre = content.pre
                            val.startNo = content.startNo
                            val.endNo = content.endNo
                        }
                    })
                    this.page.total = rsp.data.total
                })
                this.dialogFlag = false
            }
        },
        mounted() {
            this.loadData()
        }
    }
</script>

<style scoped lang="less">
    .white-black-manage{

    }
</style>
